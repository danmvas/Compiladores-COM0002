// Gerado por GNU Bison 3.0.4.
// Relate erros para <bug-bison@gnu.org>.
// Site: <http://www.gnu.org/software/bison/>.

digraph "com.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="Estado 0\n\l  0 $accept: . calculation $end\l"]
  0 -> 1 [style=dashed label="calculation"]
  0 -> "0R1" [style=solid]
 "0R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  1 [label="Estado 1\n\l  0 $accept: calculation . $end\l  2 calculation: calculation . line\l"]
  1 -> 2 [style=solid label="$end"]
  1 -> 3 [style=solid label="T_INT"]
  1 -> 4 [style=solid label="T_REAL"]
  1 -> 5 [style=solid label="T_QUIT"]
  1 -> 6 [style=solid label="T_LEFT"]
  1 -> 7 [style=solid label="T_ID"]
  1 -> 8 [style=solid label="T_CONDITIONALIF"]
  1 -> 9 [style=solid label="T_CONDITIONALSWITCH"]
  1 -> 10 [style=solid label="T_LOOPFOR"]
  1 -> 11 [style=solid label="T_LOOPWHILE"]
  1 -> 12 [style=solid label="T_LOOPDO"]
  1 -> 13 [style=solid label="T_TYPEDOUBLE"]
  1 -> 14 [style=solid label="T_TYPEINT"]
  1 -> 15 [style=solid label="T_CONST"]
  1 -> 16 [style=dashed label="line"]
  1 -> 17 [style=dashed label="number"]
  1 -> 18 [style=dashed label="math_expr"]
  1 -> 19 [style=dashed label="assing_expr"]
  1 -> 20 [style=dashed label="cond"]
  1 -> 21 [style=dashed label="loop"]
  2 [label="Estado 2\n\l  0 $accept: calculation $end .\l"]
  2 -> "2R0" [style=solid]
 "2R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  3 [label="Estado 3\n\l  8 number: T_INT .\l"]
  3 -> "3R8" [style=solid]
 "3R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  4 [label="Estado 4\n\l  9 number: T_REAL .\l"]
  4 -> "4R9" [style=solid]
 "4R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  5 [label="Estado 5\n\l  3 line: T_QUIT .\l"]
  5 -> "5R3" [style=solid]
 "5R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  6 [label="Estado 6\n\l 12 math_expr: T_LEFT . math_expr T_RIGHT\l"]
  6 -> 3 [style=solid label="T_INT"]
  6 -> 4 [style=solid label="T_REAL"]
  6 -> 6 [style=solid label="T_LEFT"]
  6 -> 17 [style=dashed label="number"]
  6 -> 22 [style=dashed label="math_expr"]
  7 [label="Estado 7\n\l 23 assing_expr: T_ID . assing_expr_linha T_SEMMICOLON\l"]
  7 -> 23 [style=solid label="T_ASSING"]
  7 -> 24 [style=solid label="T_COMPLEXOPERATORPLUS"]
  7 -> 25 [style=solid label="T_COMPLEXOPERATORMINUS"]
  7 -> 26 [style=dashed label="assing_expr_linha"]
  7 -> 27 [style=dashed label="assing_expr_2linha"]
  8 [label="Estado 8\n\l 33 cond: T_CONDITIONALIF . T_LEFT bool_expr T_RIGHT cond_linha\l"]
  8 -> 28 [style=solid label="T_LEFT"]
  9 [label="Estado 9\n\l 34 cond: T_CONDITIONALSWITCH . T_LEFT T_ID T_RIGHT T_LEFTCURLY case case_default T_RIGHTCURLY\l"]
  9 -> 29 [style=solid label="T_LEFT"]
  10 [label="Estado 10\n\l 45 loop: T_LOOPFOR . T_LEFT loopcond T_RIGHT T_LEFTCURLY line T_RIGHTCURLY\l"]
  10 -> 30 [style=solid label="T_LEFT"]
  11 [label="Estado 11\n\l 46 loop: T_LOOPWHILE . T_LEFT bool_expr T_RIGHT T_LEFTCURLY line T_RIGHTCURLY\l"]
  11 -> 31 [style=solid label="T_LEFT"]
  12 [label="Estado 12\n\l 47 loop: T_LOOPDO . T_LEFTCURLY line T_RIGHTCURLY T_LOOPWHILE T_LEFT bool_expr T_RIGHT T_SEMMICOLON\l"]
  12 -> 32 [style=solid label="T_LEFTCURLY"]
  13 [label="Estado 13\n\l 25 assing_expr: T_TYPEDOUBLE . T_ID assing_expr_2linha T_SEMMICOLON\l"]
  13 -> 33 [style=solid label="T_ID"]
  14 [label="Estado 14\n\l 24 assing_expr: T_TYPEINT . T_ID assing_expr_2linha T_SEMMICOLON\l"]
  14 -> 34 [style=solid label="T_ID"]
  15 [label="Estado 15\n\l 26 assing_expr: T_CONST . assing_expr_3linha T_SEMMICOLON\l"]
  15 -> 35 [style=solid label="T_TYPEDOUBLE"]
  15 -> 36 [style=solid label="T_TYPEINT"]
  15 -> 37 [style=dashed label="assing_expr_3linha"]
  16 [label="Estado 16\n\l  2 calculation: calculation line .\l"]
  16 -> "16R2" [style=solid]
 "16R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  17 [label="Estado 17\n\l 10 math_expr: number .\l 11          | number . T_OPERATOR number\l"]
  17 -> 38 [style=solid label="T_OPERATOR"]
  17 -> "17R10" [style=solid]
 "17R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  18 [label="Estado 18\n\l  4 line: math_expr .\l"]
  18 -> "18R4" [style=solid]
 "18R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  19 [label="Estado 19\n\l  5 line: assing_expr .\l"]
  19 -> "19R5" [style=solid]
 "19R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  20 [label="Estado 20\n\l  6 line: cond .\l"]
  20 -> "20R6" [style=solid]
 "20R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  21 [label="Estado 21\n\l  7 line: loop .\l"]
  21 -> "21R7" [style=solid]
 "21R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  22 [label="Estado 22\n\l 12 math_expr: T_LEFT math_expr . T_RIGHT\l"]
  22 -> 39 [style=solid label="T_RIGHT"]
  23 [label="Estado 23\n\l 30 assing_expr_2linha: T_ASSING . math_expr\l"]
  23 -> 3 [style=solid label="T_INT"]
  23 -> 4 [style=solid label="T_REAL"]
  23 -> 6 [style=solid label="T_LEFT"]
  23 -> 17 [style=dashed label="number"]
  23 -> 40 [style=dashed label="math_expr"]
  24 [label="Estado 24\n\l 28 assing_expr_linha: T_COMPLEXOPERATORPLUS .\l"]
  24 -> "24R28" [style=solid]
 "24R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  25 [label="Estado 25\n\l 29 assing_expr_linha: T_COMPLEXOPERATORMINUS .\l"]
  25 -> "25R29" [style=solid]
 "25R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  26 [label="Estado 26\n\l 23 assing_expr: T_ID assing_expr_linha . T_SEMMICOLON\l"]
  26 -> 41 [style=solid label="T_SEMMICOLON"]
  27 [label="Estado 27\n\l 27 assing_expr_linha: assing_expr_2linha .\l"]
  27 -> "27R27" [style=solid]
 "27R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  28 [label="Estado 28\n\l 33 cond: T_CONDITIONALIF T_LEFT . bool_expr T_RIGHT cond_linha\l"]
  28 -> 42 [style=solid label="T_ID"]
  28 -> 43 [style=dashed label="bool_expr"]
  29 [label="Estado 29\n\l 34 cond: T_CONDITIONALSWITCH T_LEFT . T_ID T_RIGHT T_LEFTCURLY case case_default T_RIGHTCURLY\l"]
  29 -> 44 [style=solid label="T_ID"]
  30 [label="Estado 30\n\l 45 loop: T_LOOPFOR T_LEFT . loopcond T_RIGHT T_LEFTCURLY line T_RIGHTCURLY\l"]
  30 -> 7 [style=solid label="T_ID"]
  30 -> 13 [style=solid label="T_TYPEDOUBLE"]
  30 -> 14 [style=solid label="T_TYPEINT"]
  30 -> 15 [style=solid label="T_CONST"]
  30 -> 45 [style=dashed label="assing_expr"]
  30 -> 46 [style=dashed label="loopcond"]
  31 [label="Estado 31\n\l 46 loop: T_LOOPWHILE T_LEFT . bool_expr T_RIGHT T_LEFTCURLY line T_RIGHTCURLY\l"]
  31 -> 42 [style=solid label="T_ID"]
  31 -> 47 [style=dashed label="bool_expr"]
  32 [label="Estado 32\n\l 47 loop: T_LOOPDO T_LEFTCURLY . line T_RIGHTCURLY T_LOOPWHILE T_LEFT bool_expr T_RIGHT T_SEMMICOLON\l"]
  32 -> 3 [style=solid label="T_INT"]
  32 -> 4 [style=solid label="T_REAL"]
  32 -> 5 [style=solid label="T_QUIT"]
  32 -> 6 [style=solid label="T_LEFT"]
  32 -> 7 [style=solid label="T_ID"]
  32 -> 8 [style=solid label="T_CONDITIONALIF"]
  32 -> 9 [style=solid label="T_CONDITIONALSWITCH"]
  32 -> 10 [style=solid label="T_LOOPFOR"]
  32 -> 11 [style=solid label="T_LOOPWHILE"]
  32 -> 12 [style=solid label="T_LOOPDO"]
  32 -> 13 [style=solid label="T_TYPEDOUBLE"]
  32 -> 14 [style=solid label="T_TYPEINT"]
  32 -> 15 [style=solid label="T_CONST"]
  32 -> 48 [style=dashed label="line"]
  32 -> 17 [style=dashed label="number"]
  32 -> 18 [style=dashed label="math_expr"]
  32 -> 19 [style=dashed label="assing_expr"]
  32 -> 20 [style=dashed label="cond"]
  32 -> 21 [style=dashed label="loop"]
  33 [label="Estado 33\n\l 25 assing_expr: T_TYPEDOUBLE T_ID . assing_expr_2linha T_SEMMICOLON\l"]
  33 -> 23 [style=solid label="T_ASSING"]
  33 -> 49 [style=dashed label="assing_expr_2linha"]
  34 [label="Estado 34\n\l 24 assing_expr: T_TYPEINT T_ID . assing_expr_2linha T_SEMMICOLON\l"]
  34 -> 23 [style=solid label="T_ASSING"]
  34 -> 50 [style=dashed label="assing_expr_2linha"]
  35 [label="Estado 35\n\l 32 assing_expr_3linha: T_TYPEDOUBLE . T_ID assing_expr_2linha\l"]
  35 -> 51 [style=solid label="T_ID"]
  36 [label="Estado 36\n\l 31 assing_expr_3linha: T_TYPEINT . T_ID assing_expr_2linha\l"]
  36 -> 52 [style=solid label="T_ID"]
  37 [label="Estado 37\n\l 26 assing_expr: T_CONST assing_expr_3linha . T_SEMMICOLON\l"]
  37 -> 53 [style=solid label="T_SEMMICOLON"]
  38 [label="Estado 38\n\l 11 math_expr: number T_OPERATOR . number\l"]
  38 -> 3 [style=solid label="T_INT"]
  38 -> 4 [style=solid label="T_REAL"]
  38 -> 54 [style=dashed label="number"]
  39 [label="Estado 39\n\l 12 math_expr: T_LEFT math_expr T_RIGHT .\l"]
  39 -> "39R12" [style=solid]
 "39R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  40 [label="Estado 40\n\l 30 assing_expr_2linha: T_ASSING math_expr .\l"]
  40 -> "40R30" [style=solid]
 "40R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  41 [label="Estado 41\n\l 23 assing_expr: T_ID assing_expr_linha T_SEMMICOLON .\l"]
  41 -> "41R23" [style=solid]
 "41R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  42 [label="Estado 42\n\l 13 bool_expr: T_ID . bool_expr_linha\l"]
  42 -> 55 [style=solid label="T_EQUAL"]
  42 -> 56 [style=solid label="T_GREATER"]
  42 -> 57 [style=solid label="T_GREATEREQUAL"]
  42 -> 58 [style=solid label="T_MINOREQUAL"]
  42 -> 59 [style=solid label="T_MINOR"]
  42 -> 60 [style=solid label="T_NOTEQUAL"]
  42 -> 61 [style=dashed label="bool_expr_linha"]
  42 -> "42R14" [style=solid]
 "42R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  43 [label="Estado 43\n\l 33 cond: T_CONDITIONALIF T_LEFT bool_expr . T_RIGHT cond_linha\l"]
  43 -> 62 [style=solid label="T_RIGHT"]
  44 [label="Estado 44\n\l 34 cond: T_CONDITIONALSWITCH T_LEFT T_ID . T_RIGHT T_LEFTCURLY case case_default T_RIGHTCURLY\l"]
  44 -> 63 [style=solid label="T_RIGHT"]
  45 [label="Estado 45\n\l 48 loopcond: assing_expr . bool_expr T_SEMMICOLON T_ID assing_expr_linha\l"]
  45 -> 42 [style=solid label="T_ID"]
  45 -> 64 [style=dashed label="bool_expr"]
  46 [label="Estado 46\n\l 45 loop: T_LOOPFOR T_LEFT loopcond . T_RIGHT T_LEFTCURLY line T_RIGHTCURLY\l"]
  46 -> 65 [style=solid label="T_RIGHT"]
  47 [label="Estado 47\n\l 46 loop: T_LOOPWHILE T_LEFT bool_expr . T_RIGHT T_LEFTCURLY line T_RIGHTCURLY\l"]
  47 -> 66 [style=solid label="T_RIGHT"]
  48 [label="Estado 48\n\l 47 loop: T_LOOPDO T_LEFTCURLY line . T_RIGHTCURLY T_LOOPWHILE T_LEFT bool_expr T_RIGHT T_SEMMICOLON\l"]
  48 -> 67 [style=solid label="T_RIGHTCURLY"]
  49 [label="Estado 49\n\l 25 assing_expr: T_TYPEDOUBLE T_ID assing_expr_2linha . T_SEMMICOLON\l"]
  49 -> 68 [style=solid label="T_SEMMICOLON"]
  50 [label="Estado 50\n\l 24 assing_expr: T_TYPEINT T_ID assing_expr_2linha . T_SEMMICOLON\l"]
  50 -> 69 [style=solid label="T_SEMMICOLON"]
  51 [label="Estado 51\n\l 32 assing_expr_3linha: T_TYPEDOUBLE T_ID . assing_expr_2linha\l"]
  51 -> 23 [style=solid label="T_ASSING"]
  51 -> 70 [style=dashed label="assing_expr_2linha"]
  52 [label="Estado 52\n\l 31 assing_expr_3linha: T_TYPEINT T_ID . assing_expr_2linha\l"]
  52 -> 23 [style=solid label="T_ASSING"]
  52 -> 71 [style=dashed label="assing_expr_2linha"]
  53 [label="Estado 53\n\l 26 assing_expr: T_CONST assing_expr_3linha T_SEMMICOLON .\l"]
  53 -> "53R26" [style=solid]
 "53R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  54 [label="Estado 54\n\l 11 math_expr: number T_OPERATOR number .\l"]
  54 -> "54R11" [style=solid]
 "54R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  55 [label="Estado 55\n\l 15 bool_expr_linha: T_EQUAL . bool_expr_2linha\l"]
  55 -> 3 [style=solid label="T_INT"]
  55 -> 4 [style=solid label="T_REAL"]
  55 -> 6 [style=solid label="T_LEFT"]
  55 -> 72 [style=solid label="T_ID"]
  55 -> 17 [style=dashed label="number"]
  55 -> 73 [style=dashed label="math_expr"]
  55 -> 74 [style=dashed label="bool_expr_2linha"]
  56 [label="Estado 56\n\l 16 bool_expr_linha: T_GREATER . bool_expr_2linha\l"]
  56 -> 3 [style=solid label="T_INT"]
  56 -> 4 [style=solid label="T_REAL"]
  56 -> 6 [style=solid label="T_LEFT"]
  56 -> 72 [style=solid label="T_ID"]
  56 -> 17 [style=dashed label="number"]
  56 -> 73 [style=dashed label="math_expr"]
  56 -> 75 [style=dashed label="bool_expr_2linha"]
  57 [label="Estado 57\n\l 17 bool_expr_linha: T_GREATEREQUAL . bool_expr_2linha\l"]
  57 -> 3 [style=solid label="T_INT"]
  57 -> 4 [style=solid label="T_REAL"]
  57 -> 6 [style=solid label="T_LEFT"]
  57 -> 72 [style=solid label="T_ID"]
  57 -> 17 [style=dashed label="number"]
  57 -> 73 [style=dashed label="math_expr"]
  57 -> 76 [style=dashed label="bool_expr_2linha"]
  58 [label="Estado 58\n\l 18 bool_expr_linha: T_MINOREQUAL . bool_expr_2linha\l"]
  58 -> 3 [style=solid label="T_INT"]
  58 -> 4 [style=solid label="T_REAL"]
  58 -> 6 [style=solid label="T_LEFT"]
  58 -> 72 [style=solid label="T_ID"]
  58 -> 17 [style=dashed label="number"]
  58 -> 73 [style=dashed label="math_expr"]
  58 -> 77 [style=dashed label="bool_expr_2linha"]
  59 [label="Estado 59\n\l 19 bool_expr_linha: T_MINOR . bool_expr_2linha\l"]
  59 -> 3 [style=solid label="T_INT"]
  59 -> 4 [style=solid label="T_REAL"]
  59 -> 6 [style=solid label="T_LEFT"]
  59 -> 72 [style=solid label="T_ID"]
  59 -> 17 [style=dashed label="number"]
  59 -> 73 [style=dashed label="math_expr"]
  59 -> 78 [style=dashed label="bool_expr_2linha"]
  60 [label="Estado 60\n\l 20 bool_expr_linha: T_NOTEQUAL . bool_expr_2linha\l"]
  60 -> 3 [style=solid label="T_INT"]
  60 -> 4 [style=solid label="T_REAL"]
  60 -> 6 [style=solid label="T_LEFT"]
  60 -> 72 [style=solid label="T_ID"]
  60 -> 17 [style=dashed label="number"]
  60 -> 73 [style=dashed label="math_expr"]
  60 -> 79 [style=dashed label="bool_expr_2linha"]
  61 [label="Estado 61\n\l 13 bool_expr: T_ID bool_expr_linha .\l"]
  61 -> "61R13" [style=solid]
 "61R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  62 [label="Estado 62\n\l 33 cond: T_CONDITIONALIF T_LEFT bool_expr T_RIGHT . cond_linha\l"]
  62 -> 3 [style=solid label="T_INT"]
  62 -> 4 [style=solid label="T_REAL"]
  62 -> 6 [style=solid label="T_LEFT"]
  62 -> 7 [style=solid label="T_ID"]
  62 -> 80 [style=solid label="T_LEFTCURLY"]
  62 -> 13 [style=solid label="T_TYPEDOUBLE"]
  62 -> 14 [style=solid label="T_TYPEINT"]
  62 -> 15 [style=solid label="T_CONST"]
  62 -> 17 [style=dashed label="number"]
  62 -> 81 [style=dashed label="math_expr"]
  62 -> 82 [style=dashed label="assing_expr"]
  62 -> 83 [style=dashed label="cond_linha"]
  63 [label="Estado 63\n\l 34 cond: T_CONDITIONALSWITCH T_LEFT T_ID T_RIGHT . T_LEFTCURLY case case_default T_RIGHTCURLY\l"]
  63 -> 84 [style=solid label="T_LEFTCURLY"]
  64 [label="Estado 64\n\l 48 loopcond: assing_expr bool_expr . T_SEMMICOLON T_ID assing_expr_linha\l"]
  64 -> 85 [style=solid label="T_SEMMICOLON"]
  65 [label="Estado 65\n\l 45 loop: T_LOOPFOR T_LEFT loopcond T_RIGHT . T_LEFTCURLY line T_RIGHTCURLY\l"]
  65 -> 86 [style=solid label="T_LEFTCURLY"]
  66 [label="Estado 66\n\l 46 loop: T_LOOPWHILE T_LEFT bool_expr T_RIGHT . T_LEFTCURLY line T_RIGHTCURLY\l"]
  66 -> 87 [style=solid label="T_LEFTCURLY"]
  67 [label="Estado 67\n\l 47 loop: T_LOOPDO T_LEFTCURLY line T_RIGHTCURLY . T_LOOPWHILE T_LEFT bool_expr T_RIGHT T_SEMMICOLON\l"]
  67 -> 88 [style=solid label="T_LOOPWHILE"]
  68 [label="Estado 68\n\l 25 assing_expr: T_TYPEDOUBLE T_ID assing_expr_2linha T_SEMMICOLON .\l"]
  68 -> "68R25" [style=solid]
 "68R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  69 [label="Estado 69\n\l 24 assing_expr: T_TYPEINT T_ID assing_expr_2linha T_SEMMICOLON .\l"]
  69 -> "69R24" [style=solid]
 "69R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  70 [label="Estado 70\n\l 32 assing_expr_3linha: T_TYPEDOUBLE T_ID assing_expr_2linha .\l"]
  70 -> "70R32" [style=solid]
 "70R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  71 [label="Estado 71\n\l 31 assing_expr_3linha: T_TYPEINT T_ID assing_expr_2linha .\l"]
  71 -> "71R31" [style=solid]
 "71R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  72 [label="Estado 72\n\l 21 bool_expr_2linha: T_ID .\l"]
  72 -> "72R21" [style=solid]
 "72R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  73 [label="Estado 73\n\l 22 bool_expr_2linha: math_expr .\l"]
  73 -> "73R22" [style=solid]
 "73R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  74 [label="Estado 74\n\l 15 bool_expr_linha: T_EQUAL bool_expr_2linha .\l"]
  74 -> "74R15" [style=solid]
 "74R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  75 [label="Estado 75\n\l 16 bool_expr_linha: T_GREATER bool_expr_2linha .\l"]
  75 -> "75R16" [style=solid]
 "75R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  76 [label="Estado 76\n\l 17 bool_expr_linha: T_GREATEREQUAL bool_expr_2linha .\l"]
  76 -> "76R17" [style=solid]
 "76R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  77 [label="Estado 77\n\l 18 bool_expr_linha: T_MINOREQUAL bool_expr_2linha .\l"]
  77 -> "77R18" [style=solid]
 "77R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  78 [label="Estado 78\n\l 19 bool_expr_linha: T_MINOR bool_expr_2linha .\l"]
  78 -> "78R19" [style=solid]
 "78R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  79 [label="Estado 79\n\l 20 bool_expr_linha: T_NOTEQUAL bool_expr_2linha .\l"]
  79 -> "79R20" [style=solid]
 "79R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  80 [label="Estado 80\n\l 35 cond_linha: T_LEFTCURLY . line T_RIGHTCURLY cond_2linha\l"]
  80 -> 3 [style=solid label="T_INT"]
  80 -> 4 [style=solid label="T_REAL"]
  80 -> 5 [style=solid label="T_QUIT"]
  80 -> 6 [style=solid label="T_LEFT"]
  80 -> 7 [style=solid label="T_ID"]
  80 -> 8 [style=solid label="T_CONDITIONALIF"]
  80 -> 9 [style=solid label="T_CONDITIONALSWITCH"]
  80 -> 10 [style=solid label="T_LOOPFOR"]
  80 -> 11 [style=solid label="T_LOOPWHILE"]
  80 -> 12 [style=solid label="T_LOOPDO"]
  80 -> 13 [style=solid label="T_TYPEDOUBLE"]
  80 -> 14 [style=solid label="T_TYPEINT"]
  80 -> 15 [style=solid label="T_CONST"]
  80 -> 89 [style=dashed label="line"]
  80 -> 17 [style=dashed label="number"]
  80 -> 18 [style=dashed label="math_expr"]
  80 -> 19 [style=dashed label="assing_expr"]
  80 -> 20 [style=dashed label="cond"]
  80 -> 21 [style=dashed label="loop"]
  81 [label="Estado 81\n\l 36 cond_linha: math_expr .\l"]
  81 -> "81R36" [style=solid]
 "81R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  82 [label="Estado 82\n\l 37 cond_linha: assing_expr .\l"]
  82 -> "82R37" [style=solid]
 "82R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  83 [label="Estado 83\n\l 33 cond: T_CONDITIONALIF T_LEFT bool_expr T_RIGHT cond_linha .\l"]
  83 -> "83R33" [style=solid]
 "83R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  84 [label="Estado 84\n\l 34 cond: T_CONDITIONALSWITCH T_LEFT T_ID T_RIGHT T_LEFTCURLY . case case_default T_RIGHTCURLY\l"]
  84 -> 90 [style=solid label="T_CONDITIONALCASE"]
  84 -> 91 [style=dashed label="case"]
  85 [label="Estado 85\n\l 48 loopcond: assing_expr bool_expr T_SEMMICOLON . T_ID assing_expr_linha\l"]
  85 -> 92 [style=solid label="T_ID"]
  86 [label="Estado 86\n\l 45 loop: T_LOOPFOR T_LEFT loopcond T_RIGHT T_LEFTCURLY . line T_RIGHTCURLY\l"]
  86 -> 3 [style=solid label="T_INT"]
  86 -> 4 [style=solid label="T_REAL"]
  86 -> 5 [style=solid label="T_QUIT"]
  86 -> 6 [style=solid label="T_LEFT"]
  86 -> 7 [style=solid label="T_ID"]
  86 -> 8 [style=solid label="T_CONDITIONALIF"]
  86 -> 9 [style=solid label="T_CONDITIONALSWITCH"]
  86 -> 10 [style=solid label="T_LOOPFOR"]
  86 -> 11 [style=solid label="T_LOOPWHILE"]
  86 -> 12 [style=solid label="T_LOOPDO"]
  86 -> 13 [style=solid label="T_TYPEDOUBLE"]
  86 -> 14 [style=solid label="T_TYPEINT"]
  86 -> 15 [style=solid label="T_CONST"]
  86 -> 93 [style=dashed label="line"]
  86 -> 17 [style=dashed label="number"]
  86 -> 18 [style=dashed label="math_expr"]
  86 -> 19 [style=dashed label="assing_expr"]
  86 -> 20 [style=dashed label="cond"]
  86 -> 21 [style=dashed label="loop"]
  87 [label="Estado 87\n\l 46 loop: T_LOOPWHILE T_LEFT bool_expr T_RIGHT T_LEFTCURLY . line T_RIGHTCURLY\l"]
  87 -> 3 [style=solid label="T_INT"]
  87 -> 4 [style=solid label="T_REAL"]
  87 -> 5 [style=solid label="T_QUIT"]
  87 -> 6 [style=solid label="T_LEFT"]
  87 -> 7 [style=solid label="T_ID"]
  87 -> 8 [style=solid label="T_CONDITIONALIF"]
  87 -> 9 [style=solid label="T_CONDITIONALSWITCH"]
  87 -> 10 [style=solid label="T_LOOPFOR"]
  87 -> 11 [style=solid label="T_LOOPWHILE"]
  87 -> 12 [style=solid label="T_LOOPDO"]
  87 -> 13 [style=solid label="T_TYPEDOUBLE"]
  87 -> 14 [style=solid label="T_TYPEINT"]
  87 -> 15 [style=solid label="T_CONST"]
  87 -> 94 [style=dashed label="line"]
  87 -> 17 [style=dashed label="number"]
  87 -> 18 [style=dashed label="math_expr"]
  87 -> 19 [style=dashed label="assing_expr"]
  87 -> 20 [style=dashed label="cond"]
  87 -> 21 [style=dashed label="loop"]
  88 [label="Estado 88\n\l 47 loop: T_LOOPDO T_LEFTCURLY line T_RIGHTCURLY T_LOOPWHILE . T_LEFT bool_expr T_RIGHT T_SEMMICOLON\l"]
  88 -> 95 [style=solid label="T_LEFT"]
  89 [label="Estado 89\n\l 35 cond_linha: T_LEFTCURLY line . T_RIGHTCURLY cond_2linha\l"]
  89 -> 96 [style=solid label="T_RIGHTCURLY"]
  90 [label="Estado 90\n\l 40 case: T_CONDITIONALCASE . math_expr T_TWODOTS line case_linha\l"]
  90 -> 3 [style=solid label="T_INT"]
  90 -> 4 [style=solid label="T_REAL"]
  90 -> 6 [style=solid label="T_LEFT"]
  90 -> 17 [style=dashed label="number"]
  90 -> 97 [style=dashed label="math_expr"]
  91 [label="Estado 91\n\l 34 cond: T_CONDITIONALSWITCH T_LEFT T_ID T_RIGHT T_LEFTCURLY case . case_default T_RIGHTCURLY\l"]
  91 -> 98 [style=solid label="T_CONDITIONALDEFAULT"]
  91 -> 99 [style=dashed label="case_default"]
  92 [label="Estado 92\n\l 48 loopcond: assing_expr bool_expr T_SEMMICOLON T_ID . assing_expr_linha\l"]
  92 -> 23 [style=solid label="T_ASSING"]
  92 -> 24 [style=solid label="T_COMPLEXOPERATORPLUS"]
  92 -> 25 [style=solid label="T_COMPLEXOPERATORMINUS"]
  92 -> 100 [style=dashed label="assing_expr_linha"]
  92 -> 27 [style=dashed label="assing_expr_2linha"]
  93 [label="Estado 93\n\l 45 loop: T_LOOPFOR T_LEFT loopcond T_RIGHT T_LEFTCURLY line . T_RIGHTCURLY\l"]
  93 -> 101 [style=solid label="T_RIGHTCURLY"]
  94 [label="Estado 94\n\l 46 loop: T_LOOPWHILE T_LEFT bool_expr T_RIGHT T_LEFTCURLY line . T_RIGHTCURLY\l"]
  94 -> 102 [style=solid label="T_RIGHTCURLY"]
  95 [label="Estado 95\n\l 47 loop: T_LOOPDO T_LEFTCURLY line T_RIGHTCURLY T_LOOPWHILE T_LEFT . bool_expr T_RIGHT T_SEMMICOLON\l"]
  95 -> 42 [style=solid label="T_ID"]
  95 -> 103 [style=dashed label="bool_expr"]
  96 [label="Estado 96\n\l 35 cond_linha: T_LEFTCURLY line T_RIGHTCURLY . cond_2linha\l"]
  96 -> 104 [style=solid label="T_CONDITIONALELSE"]
  96 -> 105 [style=dashed label="cond_2linha"]
  96 -> "96R38" [style=solid]
 "96R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  97 [label="Estado 97\n\l 40 case: T_CONDITIONALCASE math_expr . T_TWODOTS line case_linha\l"]
  97 -> 106 [style=solid label="T_TWODOTS"]
  98 [label="Estado 98\n\l 41 case_default: T_CONDITIONALDEFAULT . T_TWODOTS line\l"]
  98 -> 107 [style=solid label="T_TWODOTS"]
  99 [label="Estado 99\n\l 34 cond: T_CONDITIONALSWITCH T_LEFT T_ID T_RIGHT T_LEFTCURLY case case_default . T_RIGHTCURLY\l"]
  99 -> 108 [style=solid label="T_RIGHTCURLY"]
  100 [label="Estado 100\n\l 48 loopcond: assing_expr bool_expr T_SEMMICOLON T_ID assing_expr_linha .\l"]
  100 -> "100R48" [style=solid]
 "100R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  101 [label="Estado 101\n\l 45 loop: T_LOOPFOR T_LEFT loopcond T_RIGHT T_LEFTCURLY line T_RIGHTCURLY .\l"]
  101 -> "101R45" [style=solid]
 "101R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  102 [label="Estado 102\n\l 46 loop: T_LOOPWHILE T_LEFT bool_expr T_RIGHT T_LEFTCURLY line T_RIGHTCURLY .\l"]
  102 -> "102R46" [style=solid]
 "102R46" [label="R46", fillcolor=3, shape=diamond, style=filled]
  103 [label="Estado 103\n\l 47 loop: T_LOOPDO T_LEFTCURLY line T_RIGHTCURLY T_LOOPWHILE T_LEFT bool_expr . T_RIGHT T_SEMMICOLON\l"]
  103 -> 109 [style=solid label="T_RIGHT"]
  104 [label="Estado 104\n\l 39 cond_2linha: T_CONDITIONALELSE . T_LEFTCURLY line T_RIGHTCURLY\l"]
  104 -> 110 [style=solid label="T_LEFTCURLY"]
  105 [label="Estado 105\n\l 35 cond_linha: T_LEFTCURLY line T_RIGHTCURLY cond_2linha .\l"]
  105 -> "105R35" [style=solid]
 "105R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  106 [label="Estado 106\n\l 40 case: T_CONDITIONALCASE math_expr T_TWODOTS . line case_linha\l"]
  106 -> 3 [style=solid label="T_INT"]
  106 -> 4 [style=solid label="T_REAL"]
  106 -> 5 [style=solid label="T_QUIT"]
  106 -> 6 [style=solid label="T_LEFT"]
  106 -> 7 [style=solid label="T_ID"]
  106 -> 8 [style=solid label="T_CONDITIONALIF"]
  106 -> 9 [style=solid label="T_CONDITIONALSWITCH"]
  106 -> 10 [style=solid label="T_LOOPFOR"]
  106 -> 11 [style=solid label="T_LOOPWHILE"]
  106 -> 12 [style=solid label="T_LOOPDO"]
  106 -> 13 [style=solid label="T_TYPEDOUBLE"]
  106 -> 14 [style=solid label="T_TYPEINT"]
  106 -> 15 [style=solid label="T_CONST"]
  106 -> 111 [style=dashed label="line"]
  106 -> 17 [style=dashed label="number"]
  106 -> 18 [style=dashed label="math_expr"]
  106 -> 19 [style=dashed label="assing_expr"]
  106 -> 20 [style=dashed label="cond"]
  106 -> 21 [style=dashed label="loop"]
  107 [label="Estado 107\n\l 41 case_default: T_CONDITIONALDEFAULT T_TWODOTS . line\l"]
  107 -> 3 [style=solid label="T_INT"]
  107 -> 4 [style=solid label="T_REAL"]
  107 -> 5 [style=solid label="T_QUIT"]
  107 -> 6 [style=solid label="T_LEFT"]
  107 -> 7 [style=solid label="T_ID"]
  107 -> 8 [style=solid label="T_CONDITIONALIF"]
  107 -> 9 [style=solid label="T_CONDITIONALSWITCH"]
  107 -> 10 [style=solid label="T_LOOPFOR"]
  107 -> 11 [style=solid label="T_LOOPWHILE"]
  107 -> 12 [style=solid label="T_LOOPDO"]
  107 -> 13 [style=solid label="T_TYPEDOUBLE"]
  107 -> 14 [style=solid label="T_TYPEINT"]
  107 -> 15 [style=solid label="T_CONST"]
  107 -> 112 [style=dashed label="line"]
  107 -> 17 [style=dashed label="number"]
  107 -> 18 [style=dashed label="math_expr"]
  107 -> 19 [style=dashed label="assing_expr"]
  107 -> 20 [style=dashed label="cond"]
  107 -> 21 [style=dashed label="loop"]
  108 [label="Estado 108\n\l 34 cond: T_CONDITIONALSWITCH T_LEFT T_ID T_RIGHT T_LEFTCURLY case case_default T_RIGHTCURLY .\l"]
  108 -> "108R34" [style=solid]
 "108R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  109 [label="Estado 109\n\l 47 loop: T_LOOPDO T_LEFTCURLY line T_RIGHTCURLY T_LOOPWHILE T_LEFT bool_expr T_RIGHT . T_SEMMICOLON\l"]
  109 -> 113 [style=solid label="T_SEMMICOLON"]
  110 [label="Estado 110\n\l 39 cond_2linha: T_CONDITIONALELSE T_LEFTCURLY . line T_RIGHTCURLY\l"]
  110 -> 3 [style=solid label="T_INT"]
  110 -> 4 [style=solid label="T_REAL"]
  110 -> 5 [style=solid label="T_QUIT"]
  110 -> 6 [style=solid label="T_LEFT"]
  110 -> 7 [style=solid label="T_ID"]
  110 -> 8 [style=solid label="T_CONDITIONALIF"]
  110 -> 9 [style=solid label="T_CONDITIONALSWITCH"]
  110 -> 10 [style=solid label="T_LOOPFOR"]
  110 -> 11 [style=solid label="T_LOOPWHILE"]
  110 -> 12 [style=solid label="T_LOOPDO"]
  110 -> 13 [style=solid label="T_TYPEDOUBLE"]
  110 -> 14 [style=solid label="T_TYPEINT"]
  110 -> 15 [style=solid label="T_CONST"]
  110 -> 114 [style=dashed label="line"]
  110 -> 17 [style=dashed label="number"]
  110 -> 18 [style=dashed label="math_expr"]
  110 -> 19 [style=dashed label="assing_expr"]
  110 -> 20 [style=dashed label="cond"]
  110 -> 21 [style=dashed label="loop"]
  111 [label="Estado 111\n\l 40 case: T_CONDITIONALCASE math_expr T_TWODOTS line . case_linha\l"]
  111 -> 90 [style=solid label="T_CONDITIONALCASE"]
  111 -> 115 [style=solid label="T_BREAK"]
  111 -> 116 [style=dashed label="case"]
  111 -> 117 [style=dashed label="case_linha"]
  111 -> "111R42" [style=solid]
 "111R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  112 [label="Estado 112\n\l 41 case_default: T_CONDITIONALDEFAULT T_TWODOTS line .\l"]
  112 -> "112R41" [style=solid]
 "112R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  113 [label="Estado 113\n\l 47 loop: T_LOOPDO T_LEFTCURLY line T_RIGHTCURLY T_LOOPWHILE T_LEFT bool_expr T_RIGHT T_SEMMICOLON .\l"]
  113 -> "113R47" [style=solid]
 "113R47" [label="R47", fillcolor=3, shape=diamond, style=filled]
  114 [label="Estado 114\n\l 39 cond_2linha: T_CONDITIONALELSE T_LEFTCURLY line . T_RIGHTCURLY\l"]
  114 -> 118 [style=solid label="T_RIGHTCURLY"]
  115 [label="Estado 115\n\l 44 case_linha: T_BREAK . T_SEMMICOLON\l"]
  115 -> 119 [style=solid label="T_SEMMICOLON"]
  116 [label="Estado 116\n\l 43 case_linha: case .\l"]
  116 -> "116R43" [style=solid]
 "116R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  117 [label="Estado 117\n\l 40 case: T_CONDITIONALCASE math_expr T_TWODOTS line case_linha .\l"]
  117 -> "117R40" [style=solid]
 "117R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  118 [label="Estado 118\n\l 39 cond_2linha: T_CONDITIONALELSE T_LEFTCURLY line T_RIGHTCURLY .\l"]
  118 -> "118R39" [style=solid]
 "118R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  119 [label="Estado 119\n\l 44 case_linha: T_BREAK T_SEMMICOLON .\l"]
  119 -> "119R44" [style=solid]
 "119R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
}
